services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./docker-volumes/mongo-data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_USER: jobber
      MYSQL_DATABASE: jobber_auth
      MYSQL_PASSWORD: api
      MYSQL_ROOT_PASSWORD: api
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql-data:/var/lib/mysql
  postgresql:
    container_name: postgresql_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: jobber
      POSTGRES_DB: jobber_reviews
      POSTGRES_PASSWORD: example
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgresql-data:/var/lib/postgresql/data
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.12.12-management-alpine
    restart: always
    ports:
      # AMQP Protocol Port
      - '5672:5672'
      # Management UI Port
      - '15672:15672'
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    restart: always
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: 'true'
      xpack.security.authc.api_key.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      xpack.security.enrollment.enabled: 'true'
      xpack.security.authc.token.enabled: 'true'
      ELASTIC_PASSWORD: admin1234
    ports:
      - '9300:9300'
      - '9200:9200'
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.3
    restart: always
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2pvYmJlci1raWJhbmE6S3Z1MVZCTEFTYWFTTUpzWFpxbW5pdw
      - XPACK_FLEET_AGENT_ELASTICSEARCH_HOST=["http://elasticsearch_container:9200"]
    ports:
      - '5601:5601'
    networks:
      - elastic
    depends_on:
      - elasticsearch

networks:
  elastic:
    name: elastic
